name: Workflow CI
 
on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: test-checker
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
 
    steps:
 
      - name: Install MySQL
        run: |

          sudo systemctl start mysql
          sudo systemctl status mysql

      - name: Configure MySQL
        run: |
         sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB }};"
         sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE USER IF NOT EXISTS '${{ secrets.DB_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';"
         sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "GRANT ALL PRIVILEGES ON ${{ secrets.DB }}.* TO '${{ secrets.DB_USER }}'@'localhost';"
         sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "FLUSH PRIVILEGES;"

      - uses: actions/checkout@v2
 
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
    
      - name: Set up environment variables
        run: |         
          echo "DB_USER=${{ secrets.DB_USER}}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB=${{ secrets.DB }}" >> .env
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "DIALECT=${{ secrets.DIALECT }}" >> .env

      - name: Install Dependencies
        run: npm install

      - name: Start the application
        run: |
            npm start &
        
      - name: Wait for the application to be ready
        run: |
            sleep 10
            until curl -s http://localhost:8080; do
              sleep 5
            done

      - name: Run Tests
        run: npm test

      - name: Install Packer
        run: |
          curl -fsSL https://releases.hashicorp.com/packer/1.7.5/packer_1.7.5_linux_amd64.zip -o packer.zip
          unzip packer.zip -d /tmp
          sudo mv /tmp/packer /usr/bin/packer
          packer --version

      - name: Create webapp.zip
        run: |
            zip -r webapp.zip .

      - name: Initialize Packer
        run: packer init packer-config/custom_image.pkr.hcl

      - name: Format Packer template
        run: packer fmt packer-config/custom_image.pkr.hcl

      - name: Validate Packer template
        run: packer validate packer-config/custom_image.pkr.hcl
 
      
      # - name: Verify GCP service account key
      #   run: |
      #     echo "${{ secrets.GCP_SA_KEY }}" > /tmp/gcp_key.json
      #     gcloud auth activate-service-account --key-file=/tmp/gcp_key.json
      #     # Run any command that requires GCP credentials to verify if it works
      #     gcloud compute instances list
       

      - name: Packer Build
        uses: hashicorp/packer-github-actions@master
        with:
         command: build
         arguments: |
          -var=GCP_PROJECT_ID="ancient-vortex-411817"
          -var=source_image="custom-image"
          -var=zone="us-east1-b"
          -var=ssh_username="centos"
          -var=credentials=${{ secrets.GCP_SA_KEY }}
         target: packer-config/custom_image.pkr.hcl
        # env:
        #   GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_key.json
        
        
 